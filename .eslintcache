[{"C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\index.js":"1","C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\components\\App.js":"2","C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\components\\ui\\Theme.js":"3","C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\components\\ui\\Header.js":"4","C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\CodeCarry\\Home.js":"5","C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\CodeCarry\\TableRight.js":"6","C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\CodeCarry\\FormLeft.js":"7"},{"size":165,"mtime":1630648601665,"results":"8","hashOfConfig":"9"},{"size":1010,"mtime":1630730838286,"results":"10","hashOfConfig":"9"},{"size":690,"mtime":1630742786618,"results":"11","hashOfConfig":"9"},{"size":6361,"mtime":1630746684810,"results":"12","hashOfConfig":"9"},{"size":2843,"mtime":1630746829591,"results":"13","hashOfConfig":"9"},{"size":2117,"mtime":1630742851552,"results":"14","hashOfConfig":"9"},{"size":2873,"mtime":1630829575453,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"17qjkaa",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\components\\App.js",[],"C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\components\\ui\\Theme.js",[],"C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\components\\ui\\Header.js",["34","35","36"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport './../ui/header.css';\r\nimport logo from './../../assets/logo.png'\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginBottom: \"0.25em\"\r\n    }\r\n  },\r\n  tabContainer: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 7,\r\n    marginLeft: \"25px\"\r\n  },\r\n  drawerIcon: {\r\n    height: \"42px\",\r\n    width: \"42px\"\r\n  },\r\n  drawerIconContainer: {\r\n    marginLeft: \"auto\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  drawer: {\r\n    backgroundColor:\"#ffffff\",\r\n    width: \"45%\",\r\n  },\r\n  drawerItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n    fontFamily: \"'Roboto', sans-serif\"\r\n  },\r\n  drawerItemSelected: {\r\n    \"& .MuiListItemText-root\": {\r\n      opacity: 1\r\n    }\r\n  },\r\n  appbar: {\r\n    zIndex: theme.zIndex.modal + 1\r\n  },\r\n  logoContainer:{\r\n    maxHeight: '36px',\r\n  }\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n\r\n  const handleChange = (e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleClick = e => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const routes = [\r\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\r\n    {\r\n      name: \"about\",\r\n      link: \"/about\",\r\n      activeIndex: 1,\r\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\r\n      ariaPopup: anchorEl ? \"true\" : undefined,\r\n      mouseOver: event => handleClick(event)\r\n    },\r\n    { name: \"Voice To Text\", link: \"/voicetotext\", activeIndex: 2 },\r\n    { name: \"Blog\", link: \"/blog\", activeIndex: 3 },\r\n    { name: \"contact\", link: \"/contact\", activeIndex: 4 }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    [...routes].forEach(route => {\r\n      switch (window.location.pathname) {\r\n        case `${route.link}`:\r\n          if (value !== route.activeIndex) {\r\n            setValue(route.activeIndex);\r\n            if (\r\n              route.selectedIndex &&\r\n              route.selectedIndex !== selectedIndex\r\n            ) {\r\n              setSelectedIndex(route.selectedIndex);\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }, [value,selectedIndex, routes,]);\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabContainer}\r\n        indicatorColor=\"secondary\"\r\n      >\r\n        {routes.map((route, index) => (\r\n          <Tab\r\n            key={`${route}${index}`}\r\n            className={classes.tab}\r\n            component={Link}\r\n            to={route.link}\r\n            label={route.name}\r\n            aria-owns={route.ariaOwns}\r\n            aria-haspopup={route.ariaPopup}\r\n            onMouseOver={route.mouseOver}\r\n          />\r\n        ))}\r\n      </Tabs>\r\n  \r\n    </React.Fragment>\r\n  );\r\n\r\n  const drawer = (\r\n    <React.Fragment>\r\n      <SwipeableDrawer\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n        onOpen={() => setOpenDrawer(true)}\r\n        classes={{ paper: classes.drawer }}\r\n      >\r\n        <div className={classes.toolbarMargin} />\r\n        <List disablePadding>\r\n          {routes.map(route => (\r\n            <ListItem\r\n              divider\r\n              key={`${route}${route.activeIndex}`}\r\n              button\r\n              component={Link}\r\n              to={route.link}\r\n              selected={value === route.activeIndex}\r\n              classes={{ selected: classes.drawerItemSelected }}\r\n              onClick={() => {\r\n                setOpenDrawer(false);\r\n                setValue(route.activeIndex);\r\n              }}\r\n            >\r\n              <ListItemText className={classes.drawerItem} disableTypography>\r\n                {route.name}\r\n              </ListItemText>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </SwipeableDrawer>\r\n      <IconButton\r\n        className={classes.drawerIconContainer}\r\n        onClick={() => setOpenDrawer(!openDrawer)}\r\n        disableRipple\r\n      >\r\n        <MenuIcon className={classes.drawerIcon} />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ElevationScroll>\r\n        <AppBar position=\"fixed\" className={classes.appbar}>\r\n          <Toolbar>\r\n            <div\r\n              component={Link}\r\n              to=\"/\"\r\n              onClick={() => props.setValue(0)}\r\n            >\r\n              <img src={logo} alt=\"logo\" className={classes.logoContainer}/>\r\n            </div>\r\n            {matches ? drawer : tabs}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <div className={classes.toolbarMargin} />\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\CodeCarry\\Home.js",[],"C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\CodeCarry\\TableRight.js",[],"C:\\Users\\sazid\\Desktop\\carry\\frontend\\src\\CodeCarry\\FormLeft.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":18},{"ruleId":"41","severity":1,"message":"45","line":90,"column":10,"nodeType":"43","messageId":"44","endLine":90,"endColumn":18},{"ruleId":"46","severity":1,"message":"47","line":103,"column":9,"nodeType":"48","endLine":116,"endColumn":4},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'openMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'routes' array makes the dependencies of useEffect Hook (at line 136) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]